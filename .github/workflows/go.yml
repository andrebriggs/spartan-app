name: Build_Test_Push

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  INTROSPECTION_ACCOUNT_KEY: ${{ secrets.INTROSPECTION_ACCOUNT_KEY }}
  APP_NAME: spartan-app
  DOCKER_REPO: andrebriggs
  INTROSPECTION_ACCOUNT_NAME: abrigspksetup
  INTROSPECTION_PARTITION_KEY: spektate-key
  INTROSPECTION_TABLE_NAME: spektatetable

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set current date as env variable
      run: |
        echo "::set-env name=NOW::$(date +'%Y%m%d')"
        echo "::set-env name=IMAGE_TAG_NAME::$GITHUB_REPOSITORY:$(date +'%Y%m%d').$GITHUB_RUN_NUMBER"

    - name: Debug Env Vars
      run: |
        echo "IMAGE_TAG_NAME: $IMAGE_TAG_NAME"
        echo "Concat IMAGE_TAG_NAME: $GITHUB_REPOSITORY:$NOW.$GITHUB_RUN_NUMBER"
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        go get -u golang.org/x/lint/golint
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    # - name: Build
    #   run: go build -v .

    - name: Test
      run: |
        go test -v -coverprofile spartan.out . 
        go tool cover -html=spartan.out

    - name: Run vet & lint
      run: |
        go vet .
        golint .
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Update Spektate storage
      run: |
        set -e
        chmod +x ./bedrock_helpers.sh
        . ./bedrock_helpers.sh --source-only
        get_bedrock_version
        download_bedrock

        commitId=$GITHUB_SHA
        commitId=$(echo "${commitId:0:7}")
        url=$(git remote --verbose | grep origin | grep fetch | cut -f2 | cut -d' ' -f1)
        repourl=${url##*@}
        
        echo "./bedrock/bedrock deployment create -n $INTROSPECTION_ACCOUNT_NAME -k $INTROSPECTION_ACCOUNT_KEY -t $INTROSPECTION_TABLE_NAME -p $INTROSPECTION_PARTITION_KEY --p1 $GITHUB_RUN_ID --image-tag $IMAGE_TAG_NAME --commit-id $commitId --service $APP_NAME --repository $repourl"
        ./bedrock/bedrock deployment create -n $INTROSPECTION_ACCOUNT_NAME -k $INTROSPECTION_ACCOUNT_KEY -t $INTROSPECTION_TABLE_NAME -p $INTROSPECTION_PARTITION_KEY --p1 $GITHUB_RUN_ID --image-tag $IMAGE_TAG_NAME --commit-id $commitId --service $APP_NAME --repository $repourl
  
    - name: Azure CLI script
      uses: azure/CLI@v1
      env: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        inlineScript: |
          echo "az acr build -r $DOCKER_REPO --image $IMAGE_TAG_NAME ."
          az acr build -r $DOCKER_REPO --image $IMAGE_TAG_NAME .
  hld_update:
    name: HLD Update
    runs-on: ubuntu-latest
    steps:
    - name: Debug Env Vars
      run: |
        echo "IMAGE_TAG_NAME: $IMAGE_TAG_NAME"
        echo "Concat IMAGE_TAG_NAME: $GITHUB_REPOSITORY:$NOW.$GITHUB_RUN_NUMBER"
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
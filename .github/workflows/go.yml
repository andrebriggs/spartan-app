name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# env:
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # AWS_REGION: us-east-1
  # APP_NAME: spartan-app
  # DOCKER_REPO: andrebriggs
  # DOCKER_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  # NUGET_PASSWORD: ${{ secrets.PACKAGES_PAT }}
  # NUGET_SOURCE: https://nuget.pkg.github.com/pharos/index.json
  # NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        go get -u golang.org/x/lint/golint
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: |
        go test -v -coverprofile spartan.out . 
        go tool cover -html=spartan.out

    - name: Run vet & lint
      run: |
        go vet .
        golint .
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        credentials: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "az acr build -r andrebriggs --image $GITHUB_REPOSITORY:$(date +%s) ."
          az acr build -r andrebriggs --image $GITHUB_REPOSITORY:$(date +%s) .


    # - name: Login to ACR registry
    #   uses: actions-hub/docker/login@master
    #   env:
    #     DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
    #     DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
    #     DOCKER_REGISTRY_URL: ${{ secrets.REGISTRY_LOGIN_SERVER }}

        # docker login ${{ secrets.REGISTRY_LOGIN_SERVER }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
        # docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}:${{ github.sha }}
    # - run: |
    #     docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}:$(date +%s)
    #     docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}:$(date +%s) ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}:$(date +%s)
    #     docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}:$(date +%s)

    # - uses: actions/checkout@v2
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.APP_NAME }}:$(date +%s)
